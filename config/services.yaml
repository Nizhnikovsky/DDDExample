# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    AutoMapperPlus\AutoMapper:
        alias: AutoMapperPlus\AutoMapperInterface

    monolog.logger.player_event:
        class: Psr\Log\LoggerInterface
        factory: [ '@monolog.logger', 'player_event' ]

    App\Infrastructure\Doctrine\Player\Repository\PlayerRepository:
        arguments:
            $registry: '@doctrine'
    App\Domain\Player\Repository\PlayerRepository: '@App\Infrastructure\Doctrine\Player\Repository\PlayerRepository'

    App\Infrastructure\Doctrine\Team\Repository\TeamRepository:
        arguments:
            $registry: '@doctrine'
    App\Domain\Team\Repository\TeamRepository: '@App\Infrastructure\Doctrine\Team\Repository\TeamRepository'

    App\Infrastructure\Doctrine\Validator\UniqueEntityValidator:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
        tags: [ 'validator.constraint_validator' ]


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Infrastructure/Doctrine/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
